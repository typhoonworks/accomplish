name: Elixir CI

on:
  pull_request:
  push:
    branches: [main]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CACHE_VERSION: v8
  PERSISTENT_CACHE_DIR: cached

jobs:
  build:
    name: "Build and test (${{ matrix.mix_env }}, ${{ matrix.postgres_image }})"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mix_env: ["test"]
        postgres_image: ["postgres:16"]

    env:
      MIX_ENV: ${{ matrix.mix_env }}
    services:
      postgres:
        image: ${{ matrix.postgres_image }}
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: marocchino/tool-versions-action@v1
        id: versions
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ steps.versions.outputs.elixir }}
          otp-version: ${{ steps.versions.outputs.erlang }}

      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
            ${{ env.PERSISTENT_CACHE_DIR }}
          key: ${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-
            ${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-refs/heads/main-

      - run: mix deps.get --only $MIX_ENV
      - run: mix compile --warnings-as-errors --all-warnings
      - run: mix do ecto.create, ecto.migrate
      - run: mix coveralls.github --include slow --include migrations --max-failures 1 --warnings-as-errors
        if: env.MIX_ENV == 'test'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  static:
    name: Static checks (format, credo)
    env:
      MIX_ENV: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: marocchino/tool-versions-action@v1
        id: versions
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ steps.versions.outputs.elixir }}
          otp-version: ${{ steps.versions.outputs.erlang }}

      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-${{ github.head_ref || github.ref }}-
            static-${{ env.MIX_ENV }}-${{ env.CACHE_VERSION }}-refs/heads/main-

      - run: mix deps.get
      - run: mix compile --warnings-as-errors --all-warnings
      - run: mix format --check-formatted
      - run: mix deps.unlock --check-unused
      - run: mix credo diff --from-git-merge-base origin/main
